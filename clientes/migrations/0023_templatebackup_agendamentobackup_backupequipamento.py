# Generated by Django 5.2.7 on 2025-10-29 00:16

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('clientes', '0022_alter_acesso_porta'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TemplateBackup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('tipo_equipamento', models.CharField(choices=[('CISCO', 'Cisco'), ('HUAWEI', 'Huawei'), ('JUNIPER', 'Juniper'), ('MIKROTIK', 'MikroTik'), ('FORTINET', 'Fortinet'), ('DELL', 'Dell'), ('HP', 'HP/Aruba'), ('OUTRO', 'Outro')], help_text='Tipo/fabricante do equipamento', max_length=20)),
                ('descricao', models.TextField(blank=True, null=True)),
                ('playbook_content', models.TextField(help_text='Conteúdo do playbook Ansible em YAML')),
                ('comandos_backup', models.TextField(blank=True, help_text='Comandos específicos para backup (um por linha)', null=True)),
                ('timeout', models.IntegerField(default=60, help_text='Timeout em segundos para execução')),
                ('ativo', models.BooleanField(default=True)),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('data_atualizacao', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Template de Backup',
                'verbose_name_plural': 'Templates de Backup',
                'ordering': ['tipo_equipamento', 'nome'],
            },
        ),
        migrations.CreateModel(
            name='AgendamentoBackup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Nome do agendamento', max_length=100)),
                ('frequencia', models.CharField(choices=[('DIARIO', 'Diário'), ('SEMANAL', 'Semanal'), ('MENSAL', 'Mensal'), ('PERSONALIZADO', 'Personalizado (Cron)')], default='DIARIO', max_length=20)),
                ('cron_expressao', models.CharField(blank=True, help_text='Expressão cron personalizada (se frequência = PERSONALIZADO)', max_length=100, null=True)),
                ('hora_execucao', models.TimeField(help_text='Hora de execução do backup')),
                ('retencao_dias', models.IntegerField(default=30, help_text='Dias de retenção do backup antes de expirar')),
                ('ativo', models.BooleanField(default=True)),
                ('ultima_execucao', models.DateTimeField(blank=True, null=True)),
                ('proxima_execucao', models.DateTimeField(blank=True, null=True)),
                ('notificar_email', models.BooleanField(default=True, help_text='Enviar notificação por email após backup')),
                ('emails_notificacao', models.TextField(blank=True, help_text='Emails para notificação (um por linha)', null=True)),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('acesso', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agendamentos_backup', to='clientes.acesso')),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agendamentos_backup', to='clientes.cliente')),
                ('criado_por', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='agendamentos_criados', to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agendamentos', to='clientes.templatebackup')),
            ],
            options={
                'verbose_name': 'Agendamento de Backup',
                'verbose_name_plural': 'Agendamentos de Backup',
                'ordering': ['-data_criacao'],
            },
        ),
        migrations.CreateModel(
            name='BackupEquipamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('PENDENTE', 'Pendente'), ('EXECUTANDO', 'Executando'), ('SUCESSO', 'Sucesso'), ('ERRO', 'Erro'), ('TIMEOUT', 'Timeout')], default='PENDENTE', max_length=20)),
                ('arquivo_config', models.FileField(blank=True, help_text='Arquivo de configuração salvo', null=True, upload_to='backups/%Y/%m/%d/')),
                ('log_execucao', models.TextField(blank=True, help_text='Log completo da execução do Ansible', null=True)),
                ('erro_mensagem', models.TextField(blank=True, help_text='Mensagem de erro (se houver)', null=True)),
                ('tamanho_arquivo', models.BigIntegerField(blank=True, help_text='Tamanho do arquivo em bytes', null=True)),
                ('hash_md5', models.CharField(blank=True, help_text='Hash MD5 do arquivo para verificação', max_length=32, null=True)),
                ('tempo_execucao', models.FloatField(blank=True, help_text='Tempo de execução em segundos', null=True)),
                ('hostname', models.CharField(blank=True, max_length=255, null=True)),
                ('versao_os', models.CharField(blank=True, max_length=100, null=True)),
                ('modelo_equipamento', models.CharField(blank=True, max_length=100, null=True)),
                ('automatico', models.BooleanField(default=False, help_text='Backup agendado automaticamente')),
                ('data_backup', models.DateTimeField(auto_now_add=True)),
                ('data_expiracao', models.DateTimeField(blank=True, help_text='Data de expiração do backup (para limpeza automática)', null=True)),
                ('acesso', models.ForeignKey(help_text='Acesso SSH utilizado para o backup', on_delete=django.db.models.deletion.CASCADE, related_name='backups', to='clientes.acesso')),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='backups', to='clientes.cliente')),
                ('executado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='backups_executados', to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='backups', to='clientes.templatebackup')),
            ],
            options={
                'verbose_name': 'Backup de Equipamento',
                'verbose_name_plural': 'Backups de Equipamentos',
                'ordering': ['-data_backup'],
                'indexes': [models.Index(fields=['-data_backup'], name='clientes_ba_data_ba_82e07c_idx'), models.Index(fields=['status'], name='clientes_ba_status_f2d0d6_idx'), models.Index(fields=['cliente'], name='clientes_ba_cliente_03157c_idx')],
            },
        ),
    ]
